<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzz.dao.BranchDao">
  <sql id="all_columns">
    branch_id, enterprise_id, name, address, latitude, longitude, telephone, is_disabled
  </sql>
  <insert id="insert" parameterType="Branch">
    insert into branch(enterprise_id, name, address, latitude, longitude, telephone)
    values(#{enterpriseId}, #{name}, #{address}, #{latitude}, #{longitude}, #{telephone})
  </insert>
  <select id="checkExistenceById" parameterType="long" resultType="boolean">
    select count(*)
    from view_available_branch
    where branch_id=#{branchId}
  </select>
  <select id="getById" parameterType="long" resultType="Branch">
    select <include refid="all_columns" />
    from view_available_branch
    where branch_id=#{branchId}
  </select>
  <update id="update" parameterType="Branch">
    update branch set
      name=#{name},
      address=#{address},
      latitude=#{latitude},
      longitude=#{longitude},
      telephone=#{telephone}
    where branch_id=#{branchId}
  </update>
  <select id="count" parameterType="map" resultType="long">
    select count(*)
    from view_available_branch
    <where>
      and enterprise_id=#{enterpriseId}
      <if test="branchId != null">
        and branch_id=#{branchId}
      </if>
      <if test="nameContaining != null">
        and name like '%${nameContaining}%'
      </if>
      <if test="addressContaining != null">
        and address like '%${addressContaining}%'
      </if>
    </where>
  </select>
  <select id="list" parameterType="map" resultType="Branch">
    select <include refid="all_columns" />
    from view_available_branch
    <where>
      and enterprise_id=#{enterpriseId}
      <if test="branchId != null">
        and branch_id=#{branchId}
      </if>
      <if test="nameContaining != null">
        and name like '%' ${nameContaining} '%'
      </if>
      <if test="addressContaining != null">
        and address like '%' ${addressContaining} '%'
      </if>
    </where>
    order by enterprise_id, branch_id
    <if test="usePagination == true">
      limit #{starting}, #{pageSize}
    </if>
  </select>
</mapper>
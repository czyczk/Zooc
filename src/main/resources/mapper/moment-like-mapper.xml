<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzz.dao.MomentLikeDao">
  <insert id="insert" parameterType="MomentLike">
    insert into moment_like(moment_id, user_id, time)
    values(#{momentId}, #{userId}, #{time})
  </insert>
  <delete id="delete" parameterType="long">
    delete from moment_like
    where moment_like_id=#{momentLikeId}
  </delete>
  <select id="getById" parameterType="long" resultType="MomentLike">
    select moment_like_id, moment_id, user_id, time
    from moment_like
    where moment_like_id=#{momentLikeId}
  </select>
  <select id="getByMomentIdAndUserId" parameterType="map" resultType="MomentLike">
    select moment_like_id, moment_id, user_id, time
    from moment_like
    where moment_id=#{momentId} and user_id=#{userId}
  </select>
  <select id="countTotal" parameterType="map" resultType="long">
    select count(*)
    from moment_like
    <where>
      and moment_id=#{momentId}
      <if test="userId != null">
        and user_id=#{userId}
      </if>
    </where>
  </select>
  <select id="list" parameterType="map" resultType="com.zzzz.vo.MomentLikeDetail">
    select moment_like_id, moment_id,
           ml.user_id, username, email 'user_email', mobile 'user_mobile', time
    from moment_like ml join user u on ml.user_id = u.user_id
    where moment_id=#{momentId}
    order by time desc
    limit 0, #{n}
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzz.dao.OrderDao">
  <insert id="insert" parameterType="Order">
    insert into `order`(user_id, course_id, time, status)
    values(#{userId}, #{courseId}, #{time}, #{status})
  </insert>
  <select id="getById" parameterType="long" resultType="Order">
    select order_id, user_id, course_id, time, status
    from `order`
    where order_id=#{orderId}
  </select>
  <select id="getVoById" parameterType="long" resultType="com.zzzz.vo.OrderDetail">
    select o.order_id, o.user_id, o.course_id, c.name 'course_name', o.time, o.status
    from `order` o join course c on o.course_id = c.course_id
    where order_id=#{orderId}
  </select>
  <update id="update" parameterType="Order">
    update `order` set
      status=#{status}
    where order_id=#{orderId}
  </update>
  <select id="countTotal" parameterType="map" resultType="long">
    select count(*)
    from (select o.order_id, o.user_id, e.enterprise_id, o.course_id, c.name 'course_name',
                 o.time, o.status
          from `order` o join course c on o.course_id = c.course_id
               join enterprise e on c.enterprise_id = e.enterprise_id
          <where>
            <if test="orderId != null">
              and order_id=#{orderId}
            </if>
            <if test="userId != null">
              and user_id=#{userId}
            </if>
            <if test="enterpriseId != null">
              and e.enterprise_id=#{enterpriseId}
            </if>
            <if test="courseId != null">
              and course_id=#{courseId}
            </if>
            <if test="courseNameContaining != null">
              and course_name like '%' ${courseNameContaining} '%'
            </if>
            <if test="status != null">
              and status=#{status}
            </if>
          </where>
    ) order_detail
  </select>
  <select id="list" parameterType="map" resultType="com.zzzz.vo.OrderDetail">
    select o.order_id, o.user_id, e.enterprise_id, o.course_id, c.name 'course_name', c.price 'course_price',
    o.time, o.status, u.username, u.email 'userEmail', u.mobile 'userMobile'
    from `order` o join course c on o.course_id = c.course_id
         join enterprise e on c.enterprise_id = e.enterprise_id
         join `user` u on o.user_id = u.user_id
    <where>
      <if test="orderId != null">
        and order_id=#{orderId}
      </if>
      <if test="userId != null">
        and user_id=#{userId}
      </if>
      <if test="enterpriseId != null">
        and e.enterprise_id=#{enterpriseId}
      </if>
      <if test="courseId != null">
        and course_id=#{courseId}
      </if>
      <if test="courseNameContaining != null">
        and course_name like '%' ${courseNameContaining} '%'
      </if>
      <if test="status != null">
        and status=#{status}
      </if>
    </where>
    order by time desc
    <if test="usePagination">
      limit #{starting}, #{pageSize}
    </if>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzz.dao.OrderDao">
  <insert id="insert" parameterType="Order">
    insert into `order`(user_id, course_id, time, status)
    values(#{userId}, #{courseId}, #{time}, #{status})
  </insert>
  <select id="getById" parameterType="long" resultType="Order">
    select order_id, user_id, course_id, time, status
    from `order`
    where order_id=#{orderId}
  </select>
  <select id="getVoById" parameterType="long" resultType="com.zzzz.vo.OrderDetail">
    select o.order_id, o.user_id, o.course_id, c.name 'course_name', o.time, o.status
    from `order` o join course c on o.course_id = c.course_id
    where order_id=#{orderId}
  </select>
  <update id="update" parameterType="Order">
    update `order` set
      status=#{status}
    where order_id=#{orderId}
  </update>
  <select id="countTotal" parameterType="map" resultType="long">
    select count(*)
    from view_order_detail
    <where>
      <if test="enterpriseId != null">
        and enterprise_id=#{enterpriseId}
      </if>
      <if test="orderId != null">
        and order_id=#{orderId}
      </if>
      <if test="userId != null">
        and user_id=#{userId}
      </if>
      <if test="userEmail != null">
        and user_email=#{userEmail}
      </if>
      <if test="userMobile != null">
        and user_mobile=#{userMobile}
      </if>
      <if test="courseId != null">
        and course_id=#{courseId}
      </if>
      <if test="courseNameContaining != null">
        and course_name like '%${courseNameContaining}%'
      </if>
      <if test="status != null">
        and status=#{status}
      </if>
    </where>
  </select>
  <select id="list" parameterType="map" resultType="com.zzzz.vo.OrderDetail">
    select order_id, enterprise_id, user_id, username, user_email, user_mobile,
    course_id, course_name, course_price,
    time, status,
    refund_id, refund_time, refund_reason
    from view_order_detail
    <where>
      <if test="orderId != null">
        and order_id=#{orderId}
      </if>
      <if test="userId != null">
        and user_id=#{userId}
      </if>
      <if test="enterpriseId != null">
        and enterprise_id=#{enterpriseId}
      </if>
      <if test="courseId != null">
        and course_id=#{courseId}
      </if>
      <if test="courseNameContaining != null">
        and course_name like '%${courseNameContaining}%'
      </if>
      <if test="status != null">
        and status=#{status}
      </if>
    </where>
    order by time desc
    <if test="usePagination">
      limit #{starting}, #{pageSize}
    </if>
  </select>
  <select id="listRefund" parameterType="map" resultType="com.zzzz.vo.OrderDetail">
    select order_id, enterprise_id, user_id, username, user_email, user_mobile,
      course_id, course_name, course_price,
      time, status,
      refund_id, refund_time, refund_reason
    from view_refund_detail
    <where>
      enterprise_id=#{enterpriseId}
      <if test="orderId != null">
        order_id=#{orderId}
      </if>
      <if test="userId != null">
        user_id=#{userId}
      </if>
      <if test="userEmail != null">
        user_email=#{userEmail}
      </if>
      <if test="userMobile != null">
        user_mobile=#{userMobile}
      </if>
      <if test="courseId != null">
        course_id=#{courseId}
      </if>
      <if test="courseNameContaining != null">
        course_name like '%${courseNameContaining}%'
      </if>
      <if test="status != null">
        status=#{status}
      </if>
    </where>
    order by time desc
    <if test="usePagination">
      limit #{starting}, #{pageSize}
    </if>
  </select>
</mapper>